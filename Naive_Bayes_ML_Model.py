# -*- coding: utf-8 -*-
"""naive_bayes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eOR-0nl7CiZN5kJ8SG77cPcbeaI2OxZn
"""

#loading initial libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from google.colab import files

uploaded= files.upload()

df= pd.read_csv("cancer1.csv")

df.info()

#Visualizing Dataset
M = df[df.diagnosis == "M"]
B = df[df.diagnosis == "B"]
plt.title("Malignant vs Benign Tumor")
plt.xlabel("Radius Mean")
plt.ylabel("Texture Mean")
plt.scatter(M.radius_mean, M.texture_mean, color = "red", label = "Malignant", alpha = 0.3)
plt.scatter(B.radius_mean, B.texture_mean, color = "lime", label = "Benign", alpha = 0.3)
plt.legend()
plt.show()

#Preprocessing
#df.diаgnоsis = [1 if i== "M" else 0 fоr i in df.diаgnоsis]
x = df.drop(["diagnosis"], axis = 1)
y = df.diagnosis.values

#Data Normalization
#x = (x - nр.min(x)) / (nр.mаx(x) - nр.min(x))

#Test Train Split
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state = 42)

#Sklearn Gaussian Naive Bayes Model
from sklearn.naive_bayes import GaussianNB
nb = GaussianNB()
nb.fit(x_train, y_train)

#Accuracy
print("Naive Bayes score: ",nb.score(x_test, y_test))